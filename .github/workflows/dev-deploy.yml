name: Front End

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ github.repository }}:latest
          platforms: linux/amd64
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

    ## Run
      - 
       name: Deploy package to digitalocean
       uses: appleboy/ssh-action@master
       env:
          GITHUB_USERNAME: danni-popova
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOST_LABEL: traefik.http.routers.${{ github.event.repository.name }}.rule=Host(`${{ secrets.DEV_HOSTNAME }}`) && PathPrefix(`/`)
          MIDDLEWARE_LABEL: traefik.http.routers.${{ github.event.repository.name }}.middlewares=https-redirect@docker
          TLS_HOST_LABEL: traefik.http.routers.${{ github.event.repository.name }}-tls.rule=Host(`${{ secrets.DEV_HOSTNAME }}`) && PathPrefix(`/`)
          TLS_CERT_LABEL: traefik.http.routers.${{ github.event.repository.name }}-tls.certresolver=letsencrypt
          TLS_LABEL: traefik.http.routers.${{ github.event.repository.name }}-tls.tls=true
       with:
        host: ${{ secrets.DEV_DO_DROPLET_IP }}
        username: root
        key: ${{ secrets.ADMIN_SSH_KEY }}
        envs:  HOST_LABEL,MIDDLEWARE_LABEL,TLS_HOST_LABEL,TLS_CERT_LABEL,TLS_LABEL
        script: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p "${{ secrets.DOCKER_PASSWORD }}"
          docker pull ${{ github.repository }}:latest
          docker rm -f ${{ github.event.repository.name }} 
          docker run -d --name ${{ github.event.repository.name }} --network ${{ secrets.NETWORK }} --label "$HOST_LABEL" --label "$TLS_LABEL" --label "$TLS_CERT_LABEL" --label "$MIDDLEWARE_LABEL" --label "$TLS_HOST_LABEL" ${{ github.repository }}
          
      - 
        name: Send discord failure message
        if: ${{ failure() }}
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          color: "#FF0000"
          message: "Failed to build and push Dev Images for ${{ github.repository }} \n https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}"

      - 
        name: Send discord success message
        if: ${{ success() }}
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          color: "#48f442"
          message: "Dev Images built and pushed for ${{ github.repository }}. \n https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}"

    
